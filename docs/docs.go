// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/sent-mails": {
            "post": {
                "description": "send mail",
                "tags": [
                    "sent-mail"
                ],
                "summary": "Send mail",
                "parameters": [
                    {
                        "description": "send mail form",
                        "name": "HTTP_POST_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/form.SendMailForm"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "_const.MailType": {
            "type": "string",
            "enum": [
                "plain mail",
                "registered mail",
                "plain postcard",
                "registered postcard",
                "plain presswork",
                "registered presswork",
                "post package",
                "post express package",
                "post small package"
            ],
            "x-enum-comments": {
                "MailTypeExpressPackage": "包裹：快递",
                "MailTypePackage": "包裹：一般",
                "MailTypePlainMail": "信件：一般",
                "MailTypePlainPostcard": "明信片：一般",
                "MailTypePlainPresswork": "印刷品：一般",
                "MailTypeRegisteredMail": "信件：挂号",
                "MailTypeRegisteredPostcard": "明信片：挂号",
                "MailTypeRegisteredPresswork": "印刷品：挂号",
                "MailTypeSmallPackage": "包裹：小包"
            },
            "x-enum-varnames": [
                "MailTypePlainMail",
                "MailTypeRegisteredMail",
                "MailTypePlainPostcard",
                "MailTypeRegisteredPostcard",
                "MailTypePlainPresswork",
                "MailTypeRegisteredPresswork",
                "MailTypePackage",
                "MailTypeExpressPackage",
                "MailTypeSmallPackage"
            ]
        },
        "_const.PostFeePaymentType": {
            "type": "string",
            "enum": [
                "cash",
                "stamps"
            ],
            "x-enum-comments": {
                "PostFeePaymentTypeCash": "现金",
                "PostFeePaymentTypeStamps": "邮票"
            },
            "x-enum-varnames": [
                "PostFeePaymentTypeCash",
                "PostFeePaymentTypeStamps"
            ]
        },
        "_const.PostRegion": {
            "type": "string",
            "enum": [
                "domestic local",
                "domestic",
                "overseas (by air)",
                "overseas (surface)",
                "overseas (by air surface)"
            ],
            "x-enum-comments": {
                "PostRegionDomestic": "国内外埠",
                "PostRegionDomesticLocal": "国内本埠",
                "PostRegionOverseasByAir": "跨洋航空",
                "PostRegionOverseasByAirAndSurface": "跨洋航空水陆路",
                "PostRegionOverseasSurface": "跨洋水陆路"
            },
            "x-enum-varnames": [
                "PostRegionDomesticLocal",
                "PostRegionDomestic",
                "PostRegionOverseasByAir",
                "PostRegionOverseasSurface",
                "PostRegionOverseasByAirAndSurface"
            ]
        },
        "_const.RecipientType": {
            "type": "string",
            "enum": [
                "my self",
                "couple",
                "relative",
                "friend",
                "pen pal",
                "postmark collecting",
                "other"
            ],
            "x-enum-varnames": [
                "RecipientTypeMySelf",
                "RecipientTypeCouple",
                "RecipientTypeRelative",
                "RecipientTypeFriend",
                "RecipientTypePenPal",
                "RecipientTypePostmarkCollecting",
                "RecipientTypeOther"
            ]
        },
        "form.SendMailForm": {
            "type": "object",
            "properties": {
                "mail_type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/_const.MailType"
                        }
                    ],
                    "example": "plain mail"
                },
                "post_fee": {
                    "type": "number",
                    "example": 1.2
                },
                "post_fee_payment_type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/_const.PostFeePaymentType"
                        }
                    ],
                    "example": "stamps"
                },
                "post_region": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/_const.PostRegion"
                        }
                    ],
                    "example": "domestic local"
                },
                "recipient_address": {
                    "type": "string",
                    "example": "Caotanglu 1 Hao"
                },
                "recipient_district": {
                    "type": "string",
                    "example": "Sichaunsheng Chengdushi Qingyangqu"
                },
                "recipient_name": {
                    "type": "string",
                    "example": "Jimmy Carter"
                },
                "recipient_phone_number": {
                    "type": "string",
                    "example": "13900000001"
                },
                "recipient_type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/_const.RecipientType"
                        }
                    ],
                    "example": "friend"
                },
                "recipient_zip_code": {
                    "type": "string",
                    "example": "610061"
                },
                "send_date": {
                    "type": "string",
                    "example": "2023-05-10T12:00:00Z"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
